apiVersion: v1
kind: Namespace
metadata:
  name: wetty
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: y2
    base/version: "1.0"
    dynamicEnv: "true"
  name: wetty-front-svc
  namespace: wetty
spec:
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: y2
    component: wetty-front
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: y2
    component: wetty-front
  name: wetty-front
  namespace: wetty
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: y2
      component: wetty-front
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: y2
        component: wetty-front
    spec:
      containers:
      - env:
        - name: WETTY_URL
          value: https://k8tty.yad2.io/
        - name: BACKEND_URL
          value: https://k8tty.yad2.io
        image: 841009486958.dkr.ecr.eu-west-1.amazonaws.com/y2_k8tty_frontend:master-image-1.0.1
        imagePullPolicy: IfNotPresent
        name: master
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 600m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 150Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  name: wetty-front-ing
  namespace: wetty
spec:
  ingressClassName: nginx-internal
  rules:
  - host: k8tty.yad2.io
    http:
      paths:
      - backend:
          serviceName: wetty-front-svc
          servicePort: http